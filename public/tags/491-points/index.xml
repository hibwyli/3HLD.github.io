<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>491 Points on ByteTheCookies</title>
    <link>http://localhost:1313/tags/491-points/</link>
    <description>Recent content in 491 Points on ByteTheCookies</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 06 Oct 2024 13:49:47 +0200</lastBuildDate><atom:link href="http://localhost:1313/tags/491-points/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rivest, Shamir, Adleman 2</title>
      <link>http://localhost:1313/writeups/ironctf2024/rivest_shamir_adleman_2/</link>
      <pubDate>Sun, 06 Oct 2024 13:49:47 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/ironctf2024/rivest_shamir_adleman_2/</guid>
      <description>Rivest, Shamir, Adleman 2 Description: Little John has done his homework and tried fixing the issue in his script. Can you still find his secret.
Introduction Rivest, Shamir, Adleman 2 was a crypto CTF from IRON CTF 2024 organized by Team 1nf1n1ty. It is meant as a sequel to Rivest, Shamir, Adleman 1. We&amp;rsquo;re not given a script that generates the parameters, simply the public key and the ciphertext.
(N,e,c)=(161643423646746552081298841935498903406728484661198088824380120820649408462211320026846900530120533720144166059852036274757176945943476154740893002954181911201068843959015760064479587114460816364946604976937998011320067074515344961776920419207973234413389567508538119203696918037349918054399980346807879167361, 36675, 59237480729804419902249350038380812764615310700084519548754724856780737977857097616843794684178008858466821286387353080178404910815575872547979820848851425285654302196414305127926468908308102733135120774714553727434912025225828846601760761868067655959956674559148988221195055343304319184971182998654695411365) Solution Since N is prime we can just calculate the e-th roots of c to find the plaintext(s)</description>
    </item>
    
    <item>
      <title>WaaS</title>
      <link>http://localhost:1313/writeups/noobzctf2024/waas/</link>
      <pubDate>Tue, 06 Aug 2024 11:27:07 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/noobzctf2024/waas/</guid>
      <description>Waas Description: Writing as a Service!
Introduction WaaS (Writing as a Service) allows us to overwrite a file on the system (after some input validation) and insert anything (until a newline is met) we want in it.
import subprocess from base64 import b64decode as d while True: print(&amp;quot;[1] Write to a file\n[2] Get the flag\n[3] Exit&amp;quot;) try: inp = int(input(&amp;quot;Choice: &amp;quot;).strip()) except: print(&amp;quot;Invalid input!&amp;quot;) exit(0) if inp == 1: file = input(&amp;quot;Enter file name: &amp;quot;).</description>
    </item>
    
  </channel>
</rss>